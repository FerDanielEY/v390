<script>
  
{% comment %}

    Renders CIP integration

    Accepts:
    - newsletter_section_id: {string} Newsletter Section ID
    - contact_section_id: {string} Contact Page ID
    - footer_section_id: {string} Footer Section ID
    
{% endcomment %}


{% comment %} Form Check {% endcomment %}

  {% if page_title contains 'Shipping' and page_title contains 'Checkout' %}
    {% assign form_of_sign_up = 'Checkout' %}
      (function($) {
        $(document).on("page:load page:change", function() {
          if (Shopify.Checkout.step === "shipping_method") {
            let form_cip = document.querySelector('body > div.content > div > div > main > div.step > form');
            form_cip.addEventListener('submit', preventSubmit);
            console.log('CIP Checkout');
          }
        });
      })(Checkout.$);
  {% elsif newsletter_section_id %}
    {% assign form_of_sign_up = 'NewsletterSection' %}
    let form_cip = document.querySelector('#contact_form');
    form_cip.addEventListener('submit', preventSubmit);
    console.log('CIP Newsletter Section');
  {% elsif contact_section_id %}
    {% assign form_of_sign_up = 'ContactPage' %}
    let form_cip = document.getElementById('ContactForm');
    form_cip.addEventListener('submit', preventSubmit);
    console.log('CIP Contact Section');
  {% endif %}  

  {% if footer_section_id %}
    {% assign form_of_sign_up = 'FooterSection' %}
    let form_footer_cip = document.getElementById('ContactFooter');
    form_footer_cip.addEventListener('submit', preventSubmit);
    console.log('CIP Footer Section');
  {% endif %}  

  
{% comment %}   Actual POST Request Function and variables declaration {% endcomment %}  
  
  
function cip_post_request() {

  {% comment %} Payload variables {% endcomment %}

  // Minimum parameters
  {% if page_title contains 'Checkout' %}
    const email = '{{ checkout.email }}';
  {% else %}
    const email = document.querySelector('input[type="email"]').value;
  {% endif %}
  const newsletterId = '{{ settings.cip_newsletter_id }}';
  const dataSource = '{{ settings.cip_artist }}_{{ settings.cip_campaign }}_{{ form_of_sign_up }}_Shopify';
  const ref_url = '{{ shop.url }}';

  // Artist Signup + Consent Text Parameters
  {% unless checkout.buyer_accepts_marketing == blank  %}
    const artist_mktg_consent = '{{ checkout.buyer_accepts_marketing }}';
  {% else %}
    const artist_mktg_consent = 'false';
  {% endunless %}
  const artist_mktg_consent_txt = 'I agree to receive personalized updates and marketing messages based on my information, interests, activities, website visits and device data.<br>For more information about how we use your personal information, please see our<a class="link--text" href="https://privacy.wmg.com/ecom/privacy-policy">Privacy Policy</a>.';

  console.log(email)
  console.log(newsletterId)
  console.log(dataSource)
  console.log(ref_url)
  console.log(artist_mktg_consent)
  console.log(artist_mktg_consent_txt)

  {% comment %} End of Payload variables {% endcomment %}

  
  {% comment %} POST Request {% endcomment %}

  const url = `https://reqres.in/api/users`;
  // const url = `https://signup.wmg.com/register`;
  
  fetch(url, {
    method: 'POST',
    headers: {
      'Accept': 'text/html'
    },
    body: JSON.stringify({ email, newsletterId, dataSource, ref_url, artist_mktg_consent, artist_mktg_consent_txt })
  })
  .then(response => response.text())
  .then(data => {
    console.log('Success:', data);
  })
  .catch(error => {
    console.error('Error:', error);
  });

  console.log('Submitted Form ', url)
}
  {% comment %} End of POST Request {% endcomment %}

console.log('CIP loaded')


function preventSubmit(event) {
    var checkbox = document.getElementById("newsletterCheckbox");
    var alertParagraph = document.querySelectorAll("#alertParagraph");
    var successMessage = document.querySelectorAll(".newsletter-form__message--success")

    if (!checkbox.checked) {
      event.preventDefault();
      alertParagraph.forEach((paragraph) => {
        paragraph.style.display = "flex";
      })
      successMessage.forEach((message) => {
        message.style.display= "none";
      })
    } else {
      cip_post_request()
  }
}

</script>
